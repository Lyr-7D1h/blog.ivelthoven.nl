{"version":3,"sources":["helpers/requestor.js","helpers/notification.js","components/DateSider.js","components/Nav.js","components/BlogCard.js","pages/HomePage.js","pages/ProjectsPage.js","components/BlogForm.js","components/CategoryForm.js","pages/AdminPage.js","App.js","serviceWorker.js","index.js"],"names":["method","route","data","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","status","responseText","JSON","parse","err","Error","statusText","open","setRequestHeader","btoa","send","stringify","error","message","description","notification","success","SubMenu","Menu","Sider","Layout","width","style","background","mode","defaultSelectedKeys","defaultOpenKeys","height","borderRight","key","title","type","Item","Header","selected","className","lineHeight","float","theme","disabled","to","Content","name","blog","padding","margin","minHeight","useState","blogs","setBlogs","useEffect","requestor","then","catch","console","log","Nav","DateSider","map","i","BlogCard","Option","Select","TextArea","Input","Form","create","categories","form","onSubmit","getFieldDecorator","e","preventDefault","validateFields","values","rules","required","placeholder","value","id","rows","htmlType","block","category","Title","Typography","setCategories","level","supportsHistory","window","history","App","forceRefresh","exact","path","component","HomePage","ProjectsPage","AdminPage","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2b3c59de.chunk.js","sourcesContent":["const baseUrl = \"http://localhost:5000/\";\n\nexport default (method, route, data) => {\n  return new Promise((resolve, reject) => {\n    var xhr = new XMLHttpRequest();\n    xhr.addEventListener(\"load\", () => {\n      if (xhr.status === 200) {\n        if (xhr.responseText) {\n          try {\n            const data = JSON.parse(xhr.responseText);\n            resolve(data);\n          } catch (err) {\n            reject(err);\n          }\n        }\n      }\n      reject(\n        new Error(\n          `Request failed with Code: ${xhr.status} and with Body: ${xhr.statusText}`\n        )\n      );\n    });\n\n    xhr.open(method, baseUrl + route);\n\n    if (method === \"POST\") {\n      const username = \"admin\"; //prompt(\"Username: \");\n      const password = \"d53!HR@&JjZ4WvVx%1\"; //prompt(\"Password: \");\n      xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n      xhr.setRequestHeader(\n        \"Authorization\",\n        \"Basic \" + btoa(`${username}:${password}`)\n      );\n\n      xhr.send(JSON.stringify(data));\n    } else {\n      xhr.send();\n    }\n  });\n};\n","import { notification } from \"antd\";\n\nconst error = (message, description) => {\n  notification[\"error\"]({\n    message: message,\n    description: description\n  });\n};\n\nconst success = (message, description) => {\n  notification[\"success\"]({\n    message: message,\n    description: description\n  });\n};\n\nexport default { error, success };\n","import React from \"react\";\nimport { Menu, Icon, Layout } from \"antd\";\n\nconst { SubMenu } = Menu;\nconst { Sider } = Layout;\n\nexport default () => {\n  return (\n    <Sider width={200} style={{ background: \"#fff\" }}>\n      <Menu\n        mode=\"inline\"\n        defaultSelectedKeys={[\"1\"]}\n        defaultOpenKeys={[\"sub1\"]}\n        style={{ height: \"100%\", borderRight: 0 }}\n      >\n        <SubMenu\n          key=\"sub1\"\n          title={\n            <span>\n              <Icon type=\"snippets\" />\n              2019\n            </span>\n          }\n        >\n          <Menu.Item key=\"1\">August</Menu.Item>\n          <Menu.Item key=\"2\">option2</Menu.Item>\n          <Menu.Item key=\"3\">option3</Menu.Item>\n          <Menu.Item key=\"4\">option4</Menu.Item>\n        </SubMenu>\n        <SubMenu\n          key=\"sub2\"\n          title={\n            <span>\n              <Icon type=\"snippets\" />\n              2018\n            </span>\n          }\n        >\n          <Menu.Item key=\"5\">option5</Menu.Item>\n          <Menu.Item key=\"6\">option6</Menu.Item>\n          <Menu.Item key=\"7\">option7</Menu.Item>\n          <Menu.Item key=\"8\">option8</Menu.Item>\n        </SubMenu>\n        <SubMenu\n          key=\"sub3\"\n          title={\n            <span>\n              <Icon type=\"snippets\" />\n              2017\n            </span>\n          }\n        >\n          <Menu.Item key=\"9\">option9</Menu.Item>\n          <Menu.Item key=\"10\">option10</Menu.Item>\n          <Menu.Item key=\"11\">option11</Menu.Item>\n          <Menu.Item key=\"12\">option12</Menu.Item>\n        </SubMenu>\n      </Menu>\n    </Sider>\n  );\n};\n","import React from \"react\";\nimport { Layout, Menu } from \"antd\";\nimport { Link } from \"react-router-dom\";\n\nconst { Header } = Layout;\n\nexport default ({ selected }) => {\n  return (\n    <Header>\n      <div className=\"logo\" />\n      <Menu\n        mode=\"horizontal\"\n        defaultSelectedKeys={[selected]}\n        style={{ lineHeight: \"64px\", float: \"left\" }}\n        theme=\"dark\"\n      >\n        <Menu.Item disabled>\n          <b>BLOG.IVELTHOVEN.NL</b>\n        </Menu.Item>\n\n        <Menu.Item key=\"1\">\n          <Link to=\"/\">Blog</Link>\n        </Menu.Item>\n        <Menu.Item key=\"2\">\n          <Link to=\"/projects\">Projects</Link>\n        </Menu.Item>\n        <Menu.Item key=\"3\">\n          <Link to=\"/learning\">Learning Tree</Link>\n        </Menu.Item>\n      </Menu>\n    </Header>\n  );\n};\n","import React from \"react\";\nimport { Layout } from \"antd\";\n\nconst { Content } = Layout;\n\nexport default ({ blog: { name } }) => {\n  return (\n    <Content\n      style={{\n        background: \"#fff\",\n        padding: 24,\n        margin: 0,\n        minHeight: 280\n      }}\n    >\n      {\" \"}\n      {name}{\" \"}\n    </Content>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport requestor from \"../helpers/requestor\";\nimport notification from \"../helpers/notification\";\nimport { Layout } from \"antd\";\n\nimport DateSider from \"../components/DateSider\";\nimport Nav from \"../components/Nav\";\nimport BlogCard from \"../components/BlogCard\";\n\nexport default () => {\n  const [blogs, setBlogs] = useState([]);\n\n  useEffect(() => {\n    requestor(\"GET\", \"blog\")\n      .then(data => {\n        setBlogs(data);\n      })\n      .catch(err => {\n        notification.err(\"Could not fetch Blogs\", err.message);\n      });\n  }, []);\n\n  console.log(blogs);\n  return (\n    <Layout>\n      <Nav selected=\"1\" />\n      <Layout>\n        <DateSider></DateSider>\n        <Layout style={{ padding: \"24px 24px 24px\" }}>\n          {blogs && blogs.map((blog, i) => <BlogCard blog={blog} key={i} />)}\n        </Layout>\n      </Layout>\n    </Layout>\n  );\n};\n","import React from \"react\";\nimport { Layout } from \"antd\";\nimport Nav from \"../components/Nav\";\n\nexport default () => {\n  return (\n    <Layout>\n      <Nav selected=\"2\" />\n    </Layout>\n  );\n};\n","import React from \"react\";\nimport { Form, Input, Button, Select } from \"antd\";\n\nconst { Option } = Select;\nconst { TextArea } = Input;\n\nconst BlogForm = ({ categories, form, onSubmit }) => {\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    form.validateFields((err, values) => {\n      if (!err) {\n        onSubmit(values);\n      }\n    });\n  };\n\n  const { getFieldDecorator } = form;\n  return (\n    <Form onSubmit={handleSubmit} className=\"login-form\">\n      <Form.Item>\n        {getFieldDecorator(\"title\", {\n          rules: [{ required: true }]\n        })(<Input type=\"text\" placeholder=\"Title\" />)}\n      </Form.Item>\n\n      <Form.Item>\n        {getFieldDecorator(\"category\", {\n          rules: [{ required: true }]\n        })(\n          <Select mode=\"multiple\" placeholder=\"Category\">\n            {categories.map((categories, i) => (\n              <Option value={categories.id} key={i}>\n                {categories.name}\n              </Option>\n            ))}\n          </Select>\n        )}\n      </Form.Item>\n\n      <Form.Item>\n        {getFieldDecorator(\"content\", {\n          rules: [{ required: true }]\n        })(<TextArea placeholder=\"Content\" rows=\"10\" />)}\n      </Form.Item>\n\n      <Form.Item>\n        <Button\n          type=\"primary\"\n          htmlType=\"submit\"\n          className=\"login-form-button\"\n          block\n        >\n          Create\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default Form.create({ name: \"blog_form\" })(BlogForm);\n","import React from \"react\";\nimport { Form, Input, Button, Select } from \"antd\";\n\nconst { Option } = Select;\nconst { TextArea } = Input;\n\nconst CategoryForm = ({ categories, form, onSubmit }) => {\n  const handleSubmit = e => {\n    e.preventDefault();\n    form.validateFields((err, values) => {\n      if (!err) {\n        onSubmit(values);\n      }\n    });\n  };\n\n  const { getFieldDecorator } = form;\n  return (\n    <Form onSubmit={handleSubmit} className=\"login-form\">\n      <Form.Item>\n        {getFieldDecorator(\"name\", {\n          rules: [{ required: true }]\n        })(<Input type=\"text\" placeholder=\"Name\" />)}\n      </Form.Item>\n\n      <Form.Item>\n        {getFieldDecorator(\"parent\", {\n          rules: []\n        })(\n          <Select mode=\"single\" placeholder=\"Parent Category\">\n            {categories.map((category, i) => (\n              <Option value={category.id} key={category.id}>\n                {category.id} {category.name}\n              </Option>\n            ))}\n          </Select>\n        )}\n      </Form.Item>\n\n      <Form.Item>\n        {getFieldDecorator(\"description\", {\n          rules: [{ required: true }]\n        })(<TextArea placeholder=\"Description\" />)}\n      </Form.Item>\n\n      <Form.Item>\n        <Button\n          type=\"primary\"\n          htmlType=\"submit\"\n          className=\"login-form-button\"\n          block\n        >\n          Create\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default Form.create({ name: \"blog_form\" })(CategoryForm);\n","import React, { useEffect, useState } from \"react\";\nimport requestor from \"../helpers/requestor\";\nimport notification from \"../helpers/notification\";\nimport { Layout, Divider, Typography } from \"antd\";\n\nimport Nav from \"../components/Nav\";\nimport BlogForm from \"../components/BlogForm\";\nimport CategoryForm from \"../components/CategoryForm\";\n\nconst { Title } = Typography;\n\nexport default () => {\n  const [categories, setCategories] = useState([]);\n\n  useEffect(() => {\n    requestor(\"GET\", \"blog/category\")\n      .then(categories => {\n        setCategories(categories);\n      })\n      .catch(err => {\n        notification.error(err.message);\n      });\n  }, []);\n\n  const postBlog = () => {};\n\n  const postCategory = data => {\n    requestor(\"POST\", \"blog/category\", data)\n      .then(() => {\n        notification.success(\"Created\");\n      })\n      .catch(err => {\n        notification.error(\"Could not create\", err.message);\n      });\n  };\n\n  return (\n    <Layout>\n      <Nav selected=\"4\" />\n      <Layout>\n        <Layout style={{ padding: \"24px 24px 24px\" }}>\n          <Title level={2}>Blogs</Title>\n          {/* <BlogForm categories={categories} onSubmit={postBlog} /> */}\n          <Divider />\n          <Title level={2}>Category</Title>\n          <CategoryForm categories={categories} onSubmit={postCategory} />\n        </Layout>\n      </Layout>\n    </Layout>\n  );\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport \"antd/dist/antd.css\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\n\nimport HomePage from \"./pages/HomePage\";\nimport ProjectsPage from \"./pages/ProjectsPage\";\nimport AdminPage from \"./pages/AdminPage\";\n\nconst supportsHistory = \"pushState\" in window.history;\n\nfunction App() {\n  return (\n    <BrowserRouter forceRefresh={!supportsHistory}>\n      <Route exact path=\"/\" component={HomePage} />\n      <Route exact path=\"/projects\" component={ProjectsPage} />\n      <Route exact path=\"/admin\" component={AdminPage} />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}