{"version":3,"sources":["components/DateSider.js","components/Nav.js","pages/HomePage.js","pages/ProjectsPage.js","App.js","serviceWorker.js","index.js"],"names":["SubMenu","Menu","Sider","Layout","width","style","background","mode","defaultSelectedKeys","defaultOpenKeys","height","borderRight","key","title","type","Item","Header","className","lineHeight","float","theme","disabled","to","Content","Nav","DateSider","padding","margin","minHeight","console","log","App","path","HomePage","ProjectsPage","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8TAGQA,EAAYC,IAAZD,QACAE,EAAUC,IAAVD,MAEO,aACb,OACE,kBAACA,EAAD,CAAOE,MAAO,IAAKC,MAAO,CAAEC,WAAY,SACtC,kBAAC,IAAD,CACEC,KAAK,SACLC,oBAAqB,CAAC,KACtBC,gBAAiB,CAAC,QAClBJ,MAAO,CAAEK,OAAQ,OAAQC,YAAa,IAEtC,kBAACX,EAAD,CACEY,IAAI,OACJC,MACE,8BACE,kBAAC,IAAD,CAAMC,KAAK,aADb,SAMF,kBAAC,IAAKC,KAAN,CAAWH,IAAI,KAAf,UACA,kBAAC,IAAKG,KAAN,CAAWH,IAAI,KAAf,WACA,kBAAC,IAAKG,KAAN,CAAWH,IAAI,KAAf,WACA,kBAAC,IAAKG,KAAN,CAAWH,IAAI,KAAf,YAEF,kBAACZ,EAAD,CACEY,IAAI,OACJC,MACE,8BACE,kBAAC,IAAD,CAAMC,KAAK,aADb,SAMF,kBAAC,IAAKC,KAAN,CAAWH,IAAI,KAAf,WACA,kBAAC,IAAKG,KAAN,CAAWH,IAAI,KAAf,WACA,kBAAC,IAAKG,KAAN,CAAWH,IAAI,KAAf,WACA,kBAAC,IAAKG,KAAN,CAAWH,IAAI,KAAf,YAEF,kBAACZ,EAAD,CACEY,IAAI,OACJC,MACE,8BACE,kBAAC,IAAD,CAAMC,KAAK,aADb,SAMF,kBAAC,IAAKC,KAAN,CAAWH,IAAI,KAAf,WACA,kBAAC,IAAKG,KAAN,CAAWH,IAAI,MAAf,YACA,kBAAC,IAAKG,KAAN,CAAWH,IAAI,MAAf,YACA,kBAAC,IAAKG,KAAN,CAAWH,IAAI,MAAf,gBCnDFI,EAAWb,IAAXa,OAEO,aACb,OACE,kBAACA,EAAD,KACE,yBAAKC,UAAU,SACf,kBAAC,IAAD,CACEV,KAAK,aACLC,oBAAqB,CAAC,KACtBH,MAAO,CAAEa,WAAY,OAAQC,MAAO,QACpCC,MAAM,QAEN,kBAAC,IAAKL,KAAN,CAAWM,UAAQ,GACjB,kDAGF,kBAAC,IAAKN,KAAN,CAAWH,IAAI,KACb,kBAAC,IAAD,CAAMU,GAAG,KAAT,SAEF,kBAAC,IAAKP,KAAN,CAAWH,IAAI,KACb,kBAAC,IAAD,CAAMU,GAAG,aAAT,aAEF,kBAAC,IAAKP,KAAN,CAAWH,IAAI,KACb,kBAAC,IAAD,CAAMU,GAAG,aAAT,qBCtBFC,EAAYpB,IAAZoB,QAEO,aACb,OACE,kBAAC,IAAD,KACE,kBAACC,EAAD,MACA,kBAAC,IAAD,KACE,kBAACC,EAAD,MACA,kBAAC,IAAD,CAAQpB,MAAO,CAAEqB,QAAS,mBACxB,kBAACH,EAAD,CACElB,MAAO,CACLC,WAAY,OACZoB,QAAS,GACTC,OAAQ,EACRC,UAAW,MALf,eCVK,aAEb,OADAC,QAAQC,IAAI,QAEV,kBAAC,IAAD,KACE,kBAACN,EAAD,QCiBSO,MAjBf,WACE,OAEE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,KACV,kBAACC,EAAD,OAEF,kBAAC,IAAD,CAAOD,KAAK,aACV,kBAACE,EAAD,UCLUC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.3226488a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Menu, Icon, Layout } from \"antd\";\r\n\r\nconst { SubMenu } = Menu;\r\nconst { Sider } = Layout;\r\n\r\nexport default () => {\r\n  return (\r\n    <Sider width={200} style={{ background: \"#fff\" }}>\r\n      <Menu\r\n        mode=\"inline\"\r\n        defaultSelectedKeys={[\"1\"]}\r\n        defaultOpenKeys={[\"sub1\"]}\r\n        style={{ height: \"100%\", borderRight: 0 }}\r\n      >\r\n        <SubMenu\r\n          key=\"sub1\"\r\n          title={\r\n            <span>\r\n              <Icon type=\"snippets\" />\r\n              2019\r\n            </span>\r\n          }\r\n        >\r\n          <Menu.Item key=\"1\">August</Menu.Item>\r\n          <Menu.Item key=\"2\">option2</Menu.Item>\r\n          <Menu.Item key=\"3\">option3</Menu.Item>\r\n          <Menu.Item key=\"4\">option4</Menu.Item>\r\n        </SubMenu>\r\n        <SubMenu\r\n          key=\"sub2\"\r\n          title={\r\n            <span>\r\n              <Icon type=\"snippets\" />\r\n              2018\r\n            </span>\r\n          }\r\n        >\r\n          <Menu.Item key=\"5\">option5</Menu.Item>\r\n          <Menu.Item key=\"6\">option6</Menu.Item>\r\n          <Menu.Item key=\"7\">option7</Menu.Item>\r\n          <Menu.Item key=\"8\">option8</Menu.Item>\r\n        </SubMenu>\r\n        <SubMenu\r\n          key=\"sub3\"\r\n          title={\r\n            <span>\r\n              <Icon type=\"snippets\" />\r\n              2017\r\n            </span>\r\n          }\r\n        >\r\n          <Menu.Item key=\"9\">option9</Menu.Item>\r\n          <Menu.Item key=\"10\">option10</Menu.Item>\r\n          <Menu.Item key=\"11\">option11</Menu.Item>\r\n          <Menu.Item key=\"12\">option12</Menu.Item>\r\n        </SubMenu>\r\n      </Menu>\r\n    </Sider>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Layout, Menu } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst { Header } = Layout;\r\n\r\nexport default () => {\r\n  return (\r\n    <Header>\r\n      <div className=\"logo\" />\r\n      <Menu\r\n        mode=\"horizontal\"\r\n        defaultSelectedKeys={[\"1\"]}\r\n        style={{ lineHeight: \"64px\", float: \"left\" }}\r\n        theme=\"dark\"\r\n      >\r\n        <Menu.Item disabled>\r\n          <b>BLOG.IVELTHOVEN.NL</b>\r\n        </Menu.Item>\r\n\r\n        <Menu.Item key=\"1\">\r\n          <Link to=\"/\">Blog</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"2\">\r\n          <Link to=\"/projects\">Projects</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"3\">\r\n          <Link to=\"/learning\">Learning Tree</Link>\r\n        </Menu.Item>\r\n      </Menu>\r\n    </Header>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Layout } from \"antd\";\r\nimport DateSider from \"../components/DateSider\";\r\nimport Nav from \"../components/Nav\";\r\n\r\nconst { Content } = Layout;\r\n\r\nexport default () => {\r\n  return (\r\n    <Layout>\r\n      <Nav></Nav>\r\n      <Layout>\r\n        <DateSider></DateSider>\r\n        <Layout style={{ padding: \"24px 24px 24px\" }}>\r\n          <Content\r\n            style={{\r\n              background: \"#fff\",\r\n              padding: 24,\r\n              margin: 0,\r\n              minHeight: 280\r\n            }}\r\n          >\r\n            Content\r\n          </Content>\r\n        </Layout>\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Layout } from \"antd\";\r\nimport Nav from \"../components/Nav\";\r\n\r\nexport default () => {\r\n  console.log(\"TEST\");\r\n  return (\r\n    <Layout>\r\n      <Nav />\r\n    </Layout>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport \"antd/dist/antd.css\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\n\r\nimport HomePage from \"./pages/HomePage\";\r\nimport ProjectsPage from \"./pages/ProjectsPage\";\r\n\r\nfunction App() {\r\n  return (\r\n    // <div className=\"App\">\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route path=\"/\">\r\n          <HomePage />\r\n        </Route>\r\n        <Route path=\"/projects\">\r\n          <ProjectsPage />\r\n        </Route>\r\n      </Switch>\r\n    </BrowserRouter>\r\n    // </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}